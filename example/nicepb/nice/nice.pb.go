// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v5.27.1
// source: nice.proto

package nice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgId int32

const (
	MsgId_Unknown     MsgId = 0
	MsgId_c2s_Hello   MsgId = 100
	MsgId_s2c_Hello   MsgId = 101
	MsgId_c2s_Complex MsgId = 102
)

// Enum value maps for MsgId.
var (
	MsgId_name = map[int32]string{
		0:   "Unknown",
		100: "c2s_Hello",
		101: "s2c_Hello",
		102: "c2s_Complex",
	}
	MsgId_value = map[string]int32{
		"Unknown":     0,
		"c2s_Hello":   100,
		"s2c_Hello":   101,
		"c2s_Complex": 102,
	}
)

func (x MsgId) Enum() *MsgId {
	p := new(MsgId)
	*p = x
	return p
}

func (x MsgId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgId) Descriptor() protoreflect.EnumDescriptor {
	return file_nice_proto_enumTypes[0].Descriptor()
}

func (MsgId) Type() protoreflect.EnumType {
	return &file_nice_proto_enumTypes[0]
}

func (x MsgId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgId.Descriptor instead.
func (MsgId) EnumDescriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{0}
}

type C2S_Hello struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C2S_Hello) Reset() {
	*x = C2S_Hello{}
	mi := &file_nice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C2S_Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_Hello) ProtoMessage() {}

func (x *C2S_Hello) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_Hello.ProtoReflect.Descriptor instead.
func (*C2S_Hello) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{0}
}

func (x *C2S_Hello) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type S2C_Hello struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SayHi         string                 `protobuf:"bytes,1,opt,name=sayHi,proto3" json:"sayHi,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *S2C_Hello) Reset() {
	*x = S2C_Hello{}
	mi := &file_nice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *S2C_Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*S2C_Hello) ProtoMessage() {}

func (x *S2C_Hello) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use S2C_Hello.ProtoReflect.Descriptor instead.
func (*S2C_Hello) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{1}
}

func (x *S2C_Hello) GetSayHi() string {
	if x != nil {
		return x.SayHi
	}
	return ""
}

type C2S_Complex struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PastedObject  *PastedObject          `protobuf:"bytes,1,opt,name=pastedObject,proto3" json:"pastedObject,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *C2S_Complex) Reset() {
	*x = C2S_Complex{}
	mi := &file_nice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *C2S_Complex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*C2S_Complex) ProtoMessage() {}

func (x *C2S_Complex) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use C2S_Complex.ProtoReflect.Descriptor instead.
func (*C2S_Complex) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{2}
}

func (x *C2S_Complex) GetPastedObject() *PastedObject {
	if x != nil {
		return x.PastedObject
	}
	return nil
}

type PastedObject struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Company       string                 `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Founded       uint32                 `protobuf:"varint,2,opt,name=founded,proto3" json:"founded,omitempty"`
	Public        bool                   `protobuf:"varint,3,opt,name=public,proto3" json:"public,omitempty"`
	StockInfo     *StockInfo             `protobuf:"bytes,4,opt,name=stockInfo,proto3" json:"stockInfo,omitempty"`
	Departments   []*Departments         `protobuf:"bytes,5,rep,name=departments,proto3" json:"departments,omitempty"`
	Locations     []*Locations           `protobuf:"bytes,6,rep,name=locations,proto3" json:"locations,omitempty"`
	Financials    *Financials            `protobuf:"bytes,7,opt,name=financials,proto3" json:"financials,omitempty"`
	Metadata      *Metadata              `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PastedObject) Reset() {
	*x = PastedObject{}
	mi := &file_nice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PastedObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PastedObject) ProtoMessage() {}

func (x *PastedObject) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PastedObject.ProtoReflect.Descriptor instead.
func (*PastedObject) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{3}
}

func (x *PastedObject) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *PastedObject) GetFounded() uint32 {
	if x != nil {
		return x.Founded
	}
	return 0
}

func (x *PastedObject) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *PastedObject) GetStockInfo() *StockInfo {
	if x != nil {
		return x.StockInfo
	}
	return nil
}

func (x *PastedObject) GetDepartments() []*Departments {
	if x != nil {
		return x.Departments
	}
	return nil
}

func (x *PastedObject) GetLocations() []*Locations {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *PastedObject) GetFinancials() *Financials {
	if x != nil {
		return x.Financials
	}
	return nil
}

func (x *PastedObject) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type StockInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Symbol         string                 `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Price          uint32                 `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	Currency       string                 `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	MarketCap      string                 `protobuf:"bytes,4,opt,name=marketCap,proto3" json:"marketCap,omitempty"`
	Exchange       string                 `protobuf:"bytes,5,opt,name=exchange,proto3" json:"exchange,omitempty"`
	HistoricalData []*HistoricalData      `protobuf:"bytes,6,rep,name=historicalData,proto3" json:"historicalData,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StockInfo) Reset() {
	*x = StockInfo{}
	mi := &file_nice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StockInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockInfo) ProtoMessage() {}

func (x *StockInfo) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockInfo.ProtoReflect.Descriptor instead.
func (*StockInfo) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{4}
}

func (x *StockInfo) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *StockInfo) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *StockInfo) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *StockInfo) GetMarketCap() string {
	if x != nil {
		return x.MarketCap
	}
	return ""
}

func (x *StockInfo) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *StockInfo) GetHistoricalData() []*HistoricalData {
	if x != nil {
		return x.HistoricalData
	}
	return nil
}

type HistoricalData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Open          uint32                 `protobuf:"varint,2,opt,name=open,proto3" json:"open,omitempty"`
	High          uint32                 `protobuf:"varint,3,opt,name=high,proto3" json:"high,omitempty"`
	Low           uint32                 `protobuf:"varint,4,opt,name=low,proto3" json:"low,omitempty"`
	Close         uint32                 `protobuf:"varint,5,opt,name=close,proto3" json:"close,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistoricalData) Reset() {
	*x = HistoricalData{}
	mi := &file_nice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistoricalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistoricalData) ProtoMessage() {}

func (x *HistoricalData) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistoricalData.ProtoReflect.Descriptor instead.
func (*HistoricalData) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{5}
}

func (x *HistoricalData) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *HistoricalData) GetOpen() uint32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *HistoricalData) GetHigh() uint32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *HistoricalData) GetLow() uint32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *HistoricalData) GetClose() uint32 {
	if x != nil {
		return x.Close
	}
	return 0
}

type Departments struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Head          *Head                  `protobuf:"bytes,2,opt,name=head,proto3" json:"head,omitempty"`
	Teams         []*Teams               `protobuf:"bytes,3,rep,name=teams,proto3" json:"teams,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Departments) Reset() {
	*x = Departments{}
	mi := &file_nice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Departments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Departments) ProtoMessage() {}

func (x *Departments) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Departments.ProtoReflect.Descriptor instead.
func (*Departments) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{6}
}

func (x *Departments) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Departments) GetHead() *Head {
	if x != nil {
		return x.Head
	}
	return nil
}

func (x *Departments) GetTeams() []*Teams {
	if x != nil {
		return x.Teams
	}
	return nil
}

type Head struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FirstName     string                 `protobuf:"bytes,1,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName      string                 `protobuf:"bytes,2,opt,name=lastName,proto3" json:"lastName,omitempty"`
	EmployeeId    string                 `protobuf:"bytes,3,opt,name=employeeId,proto3" json:"employeeId,omitempty"`
	Age           uint32                 `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`
	Specialties   []string               `protobuf:"bytes,5,rep,name=specialties,proto3" json:"specialties,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Head) Reset() {
	*x = Head{}
	mi := &file_nice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Head) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Head) ProtoMessage() {}

func (x *Head) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Head.ProtoReflect.Descriptor instead.
func (*Head) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{7}
}

func (x *Head) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Head) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Head) GetEmployeeId() string {
	if x != nil {
		return x.EmployeeId
	}
	return ""
}

func (x *Head) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Head) GetSpecialties() []string {
	if x != nil {
		return x.Specialties
	}
	return nil
}

type Teams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TeamName      string                 `protobuf:"bytes,1,opt,name=teamName,proto3" json:"teamName,omitempty"`
	Members       uint32                 `protobuf:"varint,2,opt,name=members,proto3" json:"members,omitempty"`
	TechStack     []string               `protobuf:"bytes,3,rep,name=techStack,proto3" json:"techStack,omitempty"`
	Projects      []*Projects            `protobuf:"bytes,4,rep,name=projects,proto3" json:"projects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Teams) Reset() {
	*x = Teams{}
	mi := &file_nice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Teams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Teams) ProtoMessage() {}

func (x *Teams) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Teams.ProtoReflect.Descriptor instead.
func (*Teams) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{8}
}

func (x *Teams) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *Teams) GetMembers() uint32 {
	if x != nil {
		return x.Members
	}
	return 0
}

func (x *Teams) GetTechStack() []string {
	if x != nil {
		return x.TechStack
	}
	return nil
}

func (x *Teams) GetProjects() []*Projects {
	if x != nil {
		return x.Projects
	}
	return nil
}

type Projects struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Budget        uint32                 `protobuf:"varint,3,opt,name=budget,proto3" json:"budget,omitempty"`
	Timeline      *Timeline              `protobuf:"bytes,4,opt,name=timeline,proto3" json:"timeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Projects) Reset() {
	*x = Projects{}
	mi := &file_nice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Projects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Projects) ProtoMessage() {}

func (x *Projects) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Projects.ProtoReflect.Descriptor instead.
func (*Projects) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{9}
}

func (x *Projects) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Projects) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Projects) GetBudget() uint32 {
	if x != nil {
		return x.Budget
	}
	return 0
}

func (x *Projects) GetTimeline() *Timeline {
	if x != nil {
		return x.Timeline
	}
	return nil
}

type Timeline struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         string                 `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	End           string                 `protobuf:"bytes,2,opt,name=end,proto3" json:"end,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Timeline) Reset() {
	*x = Timeline{}
	mi := &file_nice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Timeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timeline) ProtoMessage() {}

func (x *Timeline) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timeline.ProtoReflect.Descriptor instead.
func (*Timeline) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{10}
}

func (x *Timeline) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *Timeline) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

type Locations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	City          string                 `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country       string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Employees     uint32                 `protobuf:"varint,3,opt,name=employees,proto3" json:"employees,omitempty"`
	Headquarters  bool                   `protobuf:"varint,4,opt,name=headquarters,proto3" json:"headquarters,omitempty"`
	Facilities    *Facilities            `protobuf:"bytes,5,opt,name=facilities,proto3" json:"facilities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Locations) Reset() {
	*x = Locations{}
	mi := &file_nice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Locations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Locations) ProtoMessage() {}

func (x *Locations) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Locations.ProtoReflect.Descriptor instead.
func (*Locations) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{11}
}

func (x *Locations) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Locations) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Locations) GetEmployees() uint32 {
	if x != nil {
		return x.Employees
	}
	return 0
}

func (x *Locations) GetHeadquarters() bool {
	if x != nil {
		return x.Headquarters
	}
	return false
}

func (x *Locations) GetFacilities() *Facilities {
	if x != nil {
		return x.Facilities
	}
	return nil
}

type Facilities struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Offices       uint32                 `protobuf:"varint,1,opt,name=offices,proto3" json:"offices,omitempty"`
	Labs          uint32                 `protobuf:"varint,2,opt,name=labs,proto3" json:"labs,omitempty"`
	Amenities     []string               `protobuf:"bytes,3,rep,name=amenities,proto3" json:"amenities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Facilities) Reset() {
	*x = Facilities{}
	mi := &file_nice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Facilities) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Facilities) ProtoMessage() {}

func (x *Facilities) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Facilities.ProtoReflect.Descriptor instead.
func (*Facilities) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{12}
}

func (x *Facilities) GetOffices() uint32 {
	if x != nil {
		return x.Offices
	}
	return 0
}

func (x *Facilities) GetLabs() uint32 {
	if x != nil {
		return x.Labs
	}
	return 0
}

func (x *Facilities) GetAmenities() []string {
	if x != nil {
		return x.Amenities
	}
	return nil
}

type Financials struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FiscalYear    uint32                 `protobuf:"varint,1,opt,name=fiscalYear,proto3" json:"fiscalYear,omitempty"`
	Revenue       uint32                 `protobuf:"varint,2,opt,name=revenue,proto3" json:"revenue,omitempty"`
	Expenses      uint32                 `protobuf:"varint,3,opt,name=expenses,proto3" json:"expenses,omitempty"`
	Profit        uint32                 `protobuf:"varint,4,opt,name=profit,proto3" json:"profit,omitempty"`
	Quarters      []*Quarters            `protobuf:"bytes,5,rep,name=quarters,proto3" json:"quarters,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Financials) Reset() {
	*x = Financials{}
	mi := &file_nice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Financials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Financials) ProtoMessage() {}

func (x *Financials) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Financials.ProtoReflect.Descriptor instead.
func (*Financials) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{13}
}

func (x *Financials) GetFiscalYear() uint32 {
	if x != nil {
		return x.FiscalYear
	}
	return 0
}

func (x *Financials) GetRevenue() uint32 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

func (x *Financials) GetExpenses() uint32 {
	if x != nil {
		return x.Expenses
	}
	return 0
}

func (x *Financials) GetProfit() uint32 {
	if x != nil {
		return x.Profit
	}
	return 0
}

func (x *Financials) GetQuarters() []*Quarters {
	if x != nil {
		return x.Quarters
	}
	return nil
}

type Quarters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Quarter       string                 `protobuf:"bytes,1,opt,name=quarter,proto3" json:"quarter,omitempty"`
	Revenue       uint32                 `protobuf:"varint,2,opt,name=revenue,proto3" json:"revenue,omitempty"`
	Profit        uint32                 `protobuf:"varint,3,opt,name=profit,proto3" json:"profit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Quarters) Reset() {
	*x = Quarters{}
	mi := &file_nice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Quarters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Quarters) ProtoMessage() {}

func (x *Quarters) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Quarters.ProtoReflect.Descriptor instead.
func (*Quarters) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{14}
}

func (x *Quarters) GetQuarter() string {
	if x != nil {
		return x.Quarter
	}
	return ""
}

func (x *Quarters) GetRevenue() uint32 {
	if x != nil {
		return x.Revenue
	}
	return 0
}

func (x *Quarters) GetProfit() uint32 {
	if x != nil {
		return x.Profit
	}
	return 0
}

type Metadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Created       string                 `protobuf:"bytes,2,opt,name=created,proto3" json:"created,omitempty"`
	LastUpdated   string                 `protobuf:"bytes,3,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	Source        string                 `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	mi := &file_nice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_nice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_nice_proto_rawDescGZIP(), []int{15}
}

func (x *Metadata) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Metadata) GetCreated() string {
	if x != nil {
		return x.Created
	}
	return ""
}

func (x *Metadata) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *Metadata) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

var File_nice_proto protoreflect.FileDescriptor

const file_nice_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"nice.proto\x12\x04nice\"\x1f\n" +
	"\tC2S_Hello\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\"!\n" +
	"\tS2C_Hello\x12\x14\n" +
	"\x05sayHi\x18\x01 \x01(\tR\x05sayHi\"E\n" +
	"\vC2S_Complex\x126\n" +
	"\fpastedObject\x18\x01 \x01(\v2\x12.nice.PastedObjectR\fpastedObject\"\xcb\x02\n" +
	"\fPastedObject\x12\x18\n" +
	"\acompany\x18\x01 \x01(\tR\acompany\x12\x18\n" +
	"\afounded\x18\x02 \x01(\rR\afounded\x12\x16\n" +
	"\x06public\x18\x03 \x01(\bR\x06public\x12-\n" +
	"\tstockInfo\x18\x04 \x01(\v2\x0f.nice.StockInfoR\tstockInfo\x123\n" +
	"\vdepartments\x18\x05 \x03(\v2\x11.nice.DepartmentsR\vdepartments\x12-\n" +
	"\tlocations\x18\x06 \x03(\v2\x0f.nice.LocationsR\tlocations\x120\n" +
	"\n" +
	"financials\x18\a \x01(\v2\x10.nice.FinancialsR\n" +
	"financials\x12*\n" +
	"\bmetadata\x18\b \x01(\v2\x0e.nice.MetadataR\bmetadata\"\xcd\x01\n" +
	"\tStockInfo\x12\x16\n" +
	"\x06symbol\x18\x01 \x01(\tR\x06symbol\x12\x14\n" +
	"\x05price\x18\x02 \x01(\rR\x05price\x12\x1a\n" +
	"\bcurrency\x18\x03 \x01(\tR\bcurrency\x12\x1c\n" +
	"\tmarketCap\x18\x04 \x01(\tR\tmarketCap\x12\x1a\n" +
	"\bexchange\x18\x05 \x01(\tR\bexchange\x12<\n" +
	"\x0ehistoricalData\x18\x06 \x03(\v2\x14.nice.HistoricalDataR\x0ehistoricalData\"t\n" +
	"\x0eHistoricalData\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x12\n" +
	"\x04open\x18\x02 \x01(\rR\x04open\x12\x12\n" +
	"\x04high\x18\x03 \x01(\rR\x04high\x12\x10\n" +
	"\x03low\x18\x04 \x01(\rR\x03low\x12\x14\n" +
	"\x05close\x18\x05 \x01(\rR\x05close\"d\n" +
	"\vDepartments\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1e\n" +
	"\x04head\x18\x02 \x01(\v2\n" +
	".nice.HeadR\x04head\x12!\n" +
	"\x05teams\x18\x03 \x03(\v2\v.nice.TeamsR\x05teams\"\x94\x01\n" +
	"\x04Head\x12\x1c\n" +
	"\tfirstName\x18\x01 \x01(\tR\tfirstName\x12\x1a\n" +
	"\blastName\x18\x02 \x01(\tR\blastName\x12\x1e\n" +
	"\n" +
	"employeeId\x18\x03 \x01(\tR\n" +
	"employeeId\x12\x10\n" +
	"\x03age\x18\x04 \x01(\rR\x03age\x12 \n" +
	"\vspecialties\x18\x05 \x03(\tR\vspecialties\"\x87\x01\n" +
	"\x05Teams\x12\x1a\n" +
	"\bteamName\x18\x01 \x01(\tR\bteamName\x12\x18\n" +
	"\amembers\x18\x02 \x01(\rR\amembers\x12\x1c\n" +
	"\ttechStack\x18\x03 \x03(\tR\ttechStack\x12*\n" +
	"\bprojects\x18\x04 \x03(\v2\x0e.nice.ProjectsR\bprojects\"z\n" +
	"\bProjects\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x16\n" +
	"\x06budget\x18\x03 \x01(\rR\x06budget\x12*\n" +
	"\btimeline\x18\x04 \x01(\v2\x0e.nice.TimelineR\btimeline\"2\n" +
	"\bTimeline\x12\x14\n" +
	"\x05start\x18\x01 \x01(\tR\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\tR\x03end\"\xad\x01\n" +
	"\tLocations\x12\x12\n" +
	"\x04city\x18\x01 \x01(\tR\x04city\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12\x1c\n" +
	"\temployees\x18\x03 \x01(\rR\temployees\x12\"\n" +
	"\fheadquarters\x18\x04 \x01(\bR\fheadquarters\x120\n" +
	"\n" +
	"facilities\x18\x05 \x01(\v2\x10.nice.FacilitiesR\n" +
	"facilities\"X\n" +
	"\n" +
	"Facilities\x12\x18\n" +
	"\aoffices\x18\x01 \x01(\rR\aoffices\x12\x12\n" +
	"\x04labs\x18\x02 \x01(\rR\x04labs\x12\x1c\n" +
	"\tamenities\x18\x03 \x03(\tR\tamenities\"\xa6\x01\n" +
	"\n" +
	"Financials\x12\x1e\n" +
	"\n" +
	"fiscalYear\x18\x01 \x01(\rR\n" +
	"fiscalYear\x12\x18\n" +
	"\arevenue\x18\x02 \x01(\rR\arevenue\x12\x1a\n" +
	"\bexpenses\x18\x03 \x01(\rR\bexpenses\x12\x16\n" +
	"\x06profit\x18\x04 \x01(\rR\x06profit\x12*\n" +
	"\bquarters\x18\x05 \x03(\v2\x0e.nice.QuartersR\bquarters\"V\n" +
	"\bQuarters\x12\x18\n" +
	"\aquarter\x18\x01 \x01(\tR\aquarter\x12\x18\n" +
	"\arevenue\x18\x02 \x01(\rR\arevenue\x12\x16\n" +
	"\x06profit\x18\x03 \x01(\rR\x06profit\"x\n" +
	"\bMetadata\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x18\n" +
	"\acreated\x18\x02 \x01(\tR\acreated\x12 \n" +
	"\vlastUpdated\x18\x03 \x01(\tR\vlastUpdated\x12\x16\n" +
	"\x06source\x18\x04 \x01(\tR\x06source*C\n" +
	"\x05MsgId\x12\v\n" +
	"\aUnknown\x10\x00\x12\r\n" +
	"\tc2s_Hello\x10d\x12\r\n" +
	"\ts2c_Hello\x10e\x12\x0f\n" +
	"\vc2s_Complex\x10fB\aZ\x05/niceb\x06proto3"

var (
	file_nice_proto_rawDescOnce sync.Once
	file_nice_proto_rawDescData []byte
)

func file_nice_proto_rawDescGZIP() []byte {
	file_nice_proto_rawDescOnce.Do(func() {
		file_nice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_nice_proto_rawDesc), len(file_nice_proto_rawDesc)))
	})
	return file_nice_proto_rawDescData
}

var file_nice_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_nice_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_nice_proto_goTypes = []any{
	(MsgId)(0),             // 0: nice.MsgId
	(*C2S_Hello)(nil),      // 1: nice.C2S_Hello
	(*S2C_Hello)(nil),      // 2: nice.S2C_Hello
	(*C2S_Complex)(nil),    // 3: nice.C2S_Complex
	(*PastedObject)(nil),   // 4: nice.PastedObject
	(*StockInfo)(nil),      // 5: nice.StockInfo
	(*HistoricalData)(nil), // 6: nice.HistoricalData
	(*Departments)(nil),    // 7: nice.Departments
	(*Head)(nil),           // 8: nice.Head
	(*Teams)(nil),          // 9: nice.Teams
	(*Projects)(nil),       // 10: nice.Projects
	(*Timeline)(nil),       // 11: nice.Timeline
	(*Locations)(nil),      // 12: nice.Locations
	(*Facilities)(nil),     // 13: nice.Facilities
	(*Financials)(nil),     // 14: nice.Financials
	(*Quarters)(nil),       // 15: nice.Quarters
	(*Metadata)(nil),       // 16: nice.Metadata
}
var file_nice_proto_depIdxs = []int32{
	4,  // 0: nice.C2S_Complex.pastedObject:type_name -> nice.PastedObject
	5,  // 1: nice.PastedObject.stockInfo:type_name -> nice.StockInfo
	7,  // 2: nice.PastedObject.departments:type_name -> nice.Departments
	12, // 3: nice.PastedObject.locations:type_name -> nice.Locations
	14, // 4: nice.PastedObject.financials:type_name -> nice.Financials
	16, // 5: nice.PastedObject.metadata:type_name -> nice.Metadata
	6,  // 6: nice.StockInfo.historicalData:type_name -> nice.HistoricalData
	8,  // 7: nice.Departments.head:type_name -> nice.Head
	9,  // 8: nice.Departments.teams:type_name -> nice.Teams
	10, // 9: nice.Teams.projects:type_name -> nice.Projects
	11, // 10: nice.Projects.timeline:type_name -> nice.Timeline
	13, // 11: nice.Locations.facilities:type_name -> nice.Facilities
	15, // 12: nice.Financials.quarters:type_name -> nice.Quarters
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_nice_proto_init() }
func file_nice_proto_init() {
	if File_nice_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_nice_proto_rawDesc), len(file_nice_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nice_proto_goTypes,
		DependencyIndexes: file_nice_proto_depIdxs,
		EnumInfos:         file_nice_proto_enumTypes,
		MessageInfos:      file_nice_proto_msgTypes,
	}.Build()
	File_nice_proto = out.File
	file_nice_proto_goTypes = nil
	file_nice_proto_depIdxs = nil
}
